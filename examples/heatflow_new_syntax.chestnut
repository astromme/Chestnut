parallel Real heat_flow(Real2d data, Real c0, Real c1)
  Real new_data = c0*data;
  new_data = new_data + c1*(data.west + data.east +
                            data.north + data.south);

  new_data = min(1.0, new_data);
  return max(0.0, new_data);
end

parallel Color convert_color(Real value)
  Color output;

  if value == 1
    output.red = output.blue = output.green = 255;
    output.opacity = 255;
  else
    output.red = value*255;
    output.green = 0;
    output.blue = 0;
    output.opacity = 255;
  end

  return output;
end

Real kappa = 0.2;
Real delta_t = 1;
Real delta_x = 1;

Real c0 = 1 - 4 * kappa * delta_t / delta_x;
Real c1 = kappa * delta_t / delta_x;

c0 = 0.6;
c1 = 0.1; // 4 elements make 0.4

IntArray2d heat_stencil[65, 36] = read('heat.data');
RealArray2d heat_data[65, 36];

foreach point in heat_data
  point = 0;
end

for (Int i=0; i<10000; i+=1)
  foreach point in heat_data, stencil in heat_stencil 

    point = heat_flow(point, c0, c1);

    if stencil == 1:
      point = 1;
    else if stencil == -1
      point = 0;
    end
  end

  display(heat_data, convert_color);
end

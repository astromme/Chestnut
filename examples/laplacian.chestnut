parallel Integer mod(Integer2d data, Integer mod_val) {
  return data.center % mod_val;
}

parallel Integer by_index(Integer2d data) {
  return data.width*data.y + data.x;
}

parallel Real laplacian(Integer2d data, Real alpha, Real beta) {
  return alpha * data.center +
         beta * (data.left + data.right + data.top + data.bottom);
}

Real2d dataset[50, 20];
dataset = :by_index(dataset);
dataset = :mod_20(dataset);


print("Original Array");
print(dataset);

Real2d modified[50, 20];
print("Laplacian");
modified = :laplacian(dataset, 1, 1);
print(modified);


parallel Integer function(Integer2d array, Real2d array2, Integer parameter, Real param2) {

  

  return 4;
}





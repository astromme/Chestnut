parallel int mandelbrot(real xleft, real xright, real ytop, real ybottom) {
  // Scale coordinates to be in the given window
  real x0 = (mandelbrot.x/mandelbrot.width) * (xright - xleft) + xleft;
  real y0 = (mandelbrot.y/mandelbrot.height) * (ytop - ybottom) + ybottom;

  real x = 0;
  real y = 0;
  int iteration = 0;
  int max_iteration = 1000;

  while (((x*x + y*y) <= (2*2)) && (iteration < max_iteration)) {
    real xtemp = (x*x - y*y) + x0;

    y = 2*x*y + y0;
    x = xtemp;
    iteration = iteration + 1;
  }

  if (iteration == max_iteration)
    return 0;         // Failed to diverge -- in the set
  else
    return iteration; // diverged in some number of iterations
}

real left = -2.5;
real right = 1;
real top = 1;
real bottom = -1;

int2d display_data[875, 500];
//Window2d display;
//
//display.data = display_data;
//display.targetFPS = 30;
//display.autoRefresh = true;

display_data = :mandelbrot(left, right, top, bottom);
display(display_data);

int count = 0;
while (count < 1000) {
  left = left * 0.99;
  right = right * 0.99;
  top = top * 0.99;
  bottom = bottom * 0.99;

  display_data = :mandelbrot(left, right, top, bottom);
  display(display_data);

  count = count + 1;
}
